name: Deploy Backend (ECS Blue/Green)

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-2
  ECS_CLUSTER: msj-ecs-cluster
  ECS_SERVICE: msj-TD-BE-service-26hram3b
  TD_FAMILY: msj-TD-BE          # ‚Üê BE ÌÉúÏä§ÌÅ¨ Ï†ïÏùò Ìå®Î∞ÄÎ¶¨
  CONTAINER_NAME: msj-be
  ECR_REPO: msj/be

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::286387522454:role/msj-role-github
          aws-region: ${{ env.AWS_REGION }}

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        id: build
        env:
          REG: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ github.sha }}
        run: |
          docker build -t $REG/${{ env.ECR_REPO }}:$TAG .
          docker push $REG/${{ env.ECR_REPO }}:$TAG
          echo "IMAGE=$REG/${{ env.ECR_REPO }}:$TAG" >> $GITHUB_ENV

      # (ÏÑ†ÌÉù) jq Î≥¥Ïû•
      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch current task definition as base
        run: |
          aws ecs describe-task-definition \
            --task-definition "${{ env.TD_FAMILY }}" \
            --query taskDefinition > taskdef-raw.json
          # Î∂àÌïÑÏöî ÌïÑÎìú Ï†úÍ±∞
          cat taskdef-raw.json | jq 'del(
            .taskDefinitionArn,.requiresAttributes,.compatibilities,
            .revision,.status,.registeredAt,.registeredBy
          )' > taskdef.json

      - name: Render task definition with new image
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: taskdef.json            # ‚Üê FEÏôÄ ÎèôÏùºÌïú ÌååÏùºÎ™Ö
          container-name: ${{ env.CONTAINER_NAME }}# msj-be
          image: ${{ env.IMAGE }}                  # ÏúÑ Build Ïä§ÌÖùÏóêÏÑú ÎÑ£ÏùÄ IMAGE

      - name: Register task definition
        id: register
        run: |
          TD_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://${{ steps.render.outputs.task-definition }} \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TD_ARN=$TD_ARN" >> $GITHUB_ENV
          echo "‚úÖ Registered: $TD_ARN"

      - name: Update service (triggers ECS Blue/Green)
        run: |
          aws ecs update-service \
            --cluster  "${{ env.ECS_CLUSTER }}" \
            --service  "${{ env.ECS_SERVICE }}" \
            --task-definition "$TD_ARN" \
            --force-new-deployment
          echo "‚è≥ Waiting for service to stabilize (ECS will switch traffic)..."
          aws ecs wait services-stable \
            --cluster  "${{ env.ECS_CLUSTER }}" \
            --services "${{ env.ECS_SERVICE }}"
          echo "üéâ BE Blue/Green deployment complete!"
